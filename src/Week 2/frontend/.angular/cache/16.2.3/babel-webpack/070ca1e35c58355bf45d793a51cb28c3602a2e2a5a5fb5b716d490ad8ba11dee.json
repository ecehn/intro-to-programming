{"ast":null,"code":"var _class;\nimport { signal } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport class TodosDataService {\n  constructor() {\n    this.items = [{\n      id: \"1\",\n      description: \"Beer\",\n      completed: false\n    }, {\n      id: \"2\",\n      description: \"Shampoo\",\n      completed: true\n    }];\n  }\n  markItemComplete(item) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getItems() {\n    return signal(this.items).asReadonly();\n  }\n  addItem(description) {\n    const itemToAdd = {\n      id: crypto.randomUUID(),\n      description,\n      completed: false\n    };\n    this.items.push(itemToAdd);\n  }\n}\n_class = TodosDataService;\n_class.ɵfac = function TodosDataService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["signal","TodosDataService","constructor","items","id","description","completed","markItemComplete","item","Error","getItems","asReadonly","addItem","itemToAdd","crypto","randomUUID","push","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ITUStudent\\class\\intro-to-programming\\src\\Week 2\\frontend\\src\\app\\services\\todos-data.service.ts"],"sourcesContent":["import { Injectable, signal } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TodosDataService {\r\n  markItemComplete(item: TodoItem) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  private items: TodoItem[] = [\r\n    { id: \"1\", description: \"Beer\", completed: false },\r\n    { id: \"2\", description: \"Shampoo\", completed: true },\r\n  ];\r\n\r\n  getItems() {\r\n    return signal(this.items).asReadonly();\r\n  }\r\n\r\n  addItem(description: string) {\r\n    const itemToAdd: TodoItem = {\r\n      id: crypto.randomUUID(),\r\n      description,\r\n      completed: false,\r\n    };\r\n    this.items.push(itemToAdd);\r\n  }\r\n}\r\n\r\n// get the data from an API,\r\n\r\n// add item, have to send it to the api.\r\n\r\nexport interface TodoItem {\r\n  id: string;\r\n  description: string;\r\n  completed: boolean;\r\n}\r\n"],"mappings":";AAAA,SAAqBA,MAAM,QAAQ,eAAe;;AAKlD,OAAM,MAAOC,gBAAgB;EAH7BC,YAAA;IAOU,KAAAC,KAAK,GAAe,CAC1B;MAAEC,EAAE,EAAE,GAAG;MAAEC,WAAW,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAK,CAAE,EAClD;MAAEF,EAAE,EAAE,GAAG;MAAEC,WAAW,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAI,CAAE,CACrD;;EANDC,gBAAgBA,CAACC,IAAc;IAC7B,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAMAC,QAAQA,CAAA;IACN,OAAOV,MAAM,CAAC,IAAI,CAACG,KAAK,CAAC,CAACQ,UAAU,EAAE;EACxC;EAEAC,OAAOA,CAACP,WAAmB;IACzB,MAAMQ,SAAS,GAAa;MAC1BT,EAAE,EAAEU,MAAM,CAACC,UAAU,EAAE;MACvBV,WAAW;MACXC,SAAS,EAAE;KACZ;IACD,IAAI,CAACH,KAAK,CAACa,IAAI,CAACH,SAAS,CAAC;EAC5B;;SApBWZ,gBAAgB;;mBAAhBA,MAAgB;AAAA;;SAAhBA,MAAgB;EAAAgB,OAAA,EAAhBhB,MAAgB,CAAAiB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}